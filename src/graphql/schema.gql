# Will be implemented in later release

scalar Date # Represented in UNIX timestamp

type Announcement {
    id: ID!
    content: String!
    validUntil: Date!
    tag: [Int!]!
    important: Boolean!
}

type Subscriber {
    id: ID!
    lineId: String!
    name: String!
    pictureUrl: String!
    tag: Int!
}

type Channel {
    id: ID!
    channelId: String!
}

type Account {
    id: ID!
    email: String!
}

input PaginationSettings {
    size: Int
    skip: Int
}

input AnnouncementInput {
    title: String!
    content: String!
    date: Date!
    tag: [Int!]!
}

input SubscriberInput {
    lineId: String!
    name: String!
    pictureUrl: String!
    tag: Int!
}

input AccountInput {
    email: String!
}

input ChannelInput {
    channelId: String!
}

interface MutationOutput {
    status: Boolean!
    code: Int!
}

type AnnouncementOutput implements MutationOutput {
    status: Boolean!
    code: Int!
    data: Announcement!
}

type SubscriberOutput implements MutationOutput {
    status: Boolean!
    code: Int!
    data: Subscriber!
}

type AccountOutput implements MutationOutput {
    status: Boolean!
    code: Int!
    data: Account!
}

type ChannelOutput implements MutationOutput {
    status: Boolean!
    code: Int!
    data: Channel!
}

type Query {
    findAllAnnouncement(page: PaginationSettings): [Announcement!]!
    findAnnouncementByTag(tag: Int!, page: PaginationSettings): [Announcement!]!
    findAllSubscriber(page: PaginationSettings): [Subscriber!]!
    findChannel: Channel!
    findAllAccount(page: PaginationSettings): [Account!]!
}

type Mutation {
    createAnnouncement(data: AnnouncementInput!): AnnouncementOutput!
    createSubscriber(data: SubscriberInput!): SubscriberOutput!
    createAccount(data: AccountInput!): AccountOutput!
    createChannel(data: ChannelInput!): ChannelOutput!
    deleteAnnouncement(id: ID!): AnnouncementOutput!
    deleteSubscriber(id: ID!): SubscriberOutput!
    deleteAccount(id: ID!): AccountOutput!
    deleteChannel(id: ID!): ChannelOutput!
    updateAnnouncement(id: ID!, data: AnnouncementInput!): AnnouncementOutput!
    updateSubscriber(id: ID!, data: SubscriberInput!): SubscriberOutput!
}
